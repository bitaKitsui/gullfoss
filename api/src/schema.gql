# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Cast {
  id: String!
  movies: [Movie!]
  name: String!
}

type CastsOnMovies {
  cast: Cast!
  castId: String!
  movie: Movie!
  movieId: String!
}

type CompaniesOnMovies {
  company: Company!
  companyId: String!
  movie: Movie!
  movieId: String!
}

type Company {
  id: String!
  movies: [CompaniesOnMovies!]
  name: String!
}

type CountriesOnMovies {
  country: Country!
  countryId: String!
  movie: Movie!
  moviesId: String!
}

type Country {
  id: String!
  name: String!
}

input CreateCrewInput {
  name: String!
}

input CreateMovieInput {
  runtime: Int!
  title: String!
  year: String!
}

type Crew {
  createdAt: String!
  id: String!
  jobs: [JobsOnCrews!]
  movies: [CrewsOnMovies!]
  name: String!
  updatedAt: String!
}

type CrewsOnMovies {
  crew: Crew!
  crewId: String!
  movie: Movie!
  movieId: String!
}

type Job {
  id: String!
  name: String!
}

type JobsOnCrews {
  crew: Crew!
  crewId: String!
  job: Job!
  jobId: String!
}

type List {
  id: String!
  movies: [Movie!]
  title: String!
}

type ListsOnMovies {
  list: List!
  listId: String!
  movie: Movie!
  movieId: String!
}

type Movie {
  casts: [CastsOnMovies!]
  companies: [CompaniesOnMovies!]
  countries: [CountriesOnMovies!]
  createdAt: String!
  crews: [CrewsOnMovies!]
  id: String!
  isWatched: Boolean!
  lists: [List!]
  runtime: Int!
  title: String!
  updatedAt: String!
  year: String!
}

type Mutation {
  addList(listId: String!, movieId: String!): ListsOnMovies!
  create(createMovieInput: CreateMovieInput!): Movie!
  createCastSeeds: [Cast!]!
  createCompanySeeds: [Company!]!
  createCountrySeeds: [Country!]!
  createCrew(createCrewInput: CreateCrewInput!): Crew!
  createCrewSeeds: [Crew!]!
  createJobs: [Job!]!
  createList(title: String!): List!
  createSeeds: [Movie!]!
  deleteAll: Boolean!
  deleteAllCrews: Boolean!
  deleteCrewById(id: String!): Boolean!
  deleteOneById(id: String!): Boolean!
  setCast(castId: String!, movieId: String!): CastsOnMovies!
  setCompany(companyId: String!, movieId: String!): CompaniesOnMovies!
  setCountry(countryId: String!, movieId: String!): CountriesOnMovies!
  setCrew(crewId: String!, movieId: String!): CrewsOnMovies!
  setJob(crewId: String!, jobId: String!): JobsOnCrews!
  updateCrewById(id: String!, updateCrewInput: UpdateCrewInput!): Crew!
  updateMovie(id: String!, updateMovieInput: UpdateMovieInput!): Movie!
}

type Query {
  findAll: [Movie!]!
  findAllCasts: [CastsOnMovies!]!
  findAllCompanies: [Company!]!
  findAllCountries: [Country!]!
  findAllCrew: [Crew!]!
  findAllJobs: [Job!]!
  findAllLists: [ListsOnMovies!]!
  findListById(id: String!): List!
  findOneById(id: String!): Movie!
  findUnWatchedMovies: [Movie!]!
  findWatchedMovies: [Movie!]!
}

input UpdateCrewInput {
  name: String
}

input UpdateMovieInput {
  runtime: Int
  title: String
  year: String
}